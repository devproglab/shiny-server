effects_graph <- function (model, data, slopevar, mediator, from, to, xlab, ylab, step, ylims=c(NULL, NULL)) {
  sig.color = "#00BFC4"
  insig.color = "#F8766D"
  values <- seq(from, to, step)
  slopevar_pos <- match(slopevar, names(model$coefficients[[2]]))
  mediator_pos <- match(mediator, names(model$coefficients[[2]]))
  coeff_number <- length(names(model$coefficients[[2]]))
  slopes <- model$coefficients[[2]][[slopevar]] + model$coefficients[[2]][[mediator]]*values
  estmean<-coef(model)
  var <- vcovHC(model)
  
  for (i in 1:coeff_number) {
    names(estmean)[i] <- paste('x', i, sep='')
    colnames(var)[i] <- paste('x', i, sep='')
    rownames(var)[i] <- paste('x', i, sep='')
  }
  require(car)
  require(msm)
  SEs <- rep(NA, length(values))
  for (i in 1:length(values)){
    j <- values[i]
    form <- paste( paste(paste('~(x', slopevar_pos, sep=''),')',sep=''), paste(paste('(x', mediator_pos, sep=''),')',sep=''), sep=' + ')
    form <- paste(form, '* %f')
    form <- as.formula(sprintf(form, j))
    class(form)
    SEs[i] <- deltamethod (form, estmean, var)
  }
  upper <- slopes + 1.96*SEs
  lower <- slopes - 1.96*SEs
  
  sigs <- which((lower < 0 & upper < 0) | (lower > 0 & upper > 0))
  insigs <- setdiff(1:length(values), sigs)
  
  Significance <- rep(NA, length(lower))
  Significance <- factor(Significance, levels = c("Незначимо", 
                                                          "Значимо"))
  index <- 1:length(values) %in% insigs
  Significance[index] <- "Незначимо"
  index <- 1:length(values) %in% sigs
  Significance[index] <- "Значимо"
  cbs <- data.frame(values = values, slopes = slopes, lower = lower,upper = upper, significance = Significance)
  sig_indicator <- data.frame(cbs$significance == 'Значимо')

  library(dplyr)
  library(magrittr)
  pos_change <- which(cbs$significance != dplyr::lag(cbs$significance))
  values_change <- cbs$values[pos_change]

  if (!length(sig_indicator[sig_indicator == FALSE])==0) {
  first_insign <- min(which(sig_indicator == FALSE))
  last_insign <- max(which(sig_indicator == FALSE))
  } else {
    first_insign <- 1
    last_insign <- 1
  }
  
  if (last_insign==length(values)) {
    cbso1 <- cbs[1:(first_insign-1), ]
    cbsi <- cbs[first_insign:(last_insign),]
    cbso2 <- cbs[-(1:length(values)),]
  } else  if (first_insign==1) {
    cbso1 <- cbs[-(1:length(values)),]
    cbsi <- cbs[first_insign:(last_insign),]
    cbso2 <- cbs[(last_insign+1):length(values), ]
  } else  {
    cbso1 <- cbs[1:(first_insign-1), ]
    cbso2 <- cbs[(last_insign+1):length(values), ]
    cbsi <- cbs[first_insign:(last_insign),]  
  }
  
  mediator_name <- gsub(".*:", "", mediator)
  modrange <- range(s[,mediator_name])
  quantiles <- quantile(s[,mediator_name], probs=c(0.25, 0.72))
  
  library(ggplot2)
  plot <- ggplot2::ggplot() + ggplot2::geom_path(data = cbso1, ggplot2::aes(x = cbso1[, 'values'], y = cbso1[, 'slopes'], color = cbso1[, 
                                                                                                                   "significance"]), size = 2)+
    ggplot2::geom_path(data = cbsi, ggplot2::aes(x = cbsi[, 'values'], y = cbsi[, 'slopes'], color = cbsi[, 
                                                                                                            "significance"]), size = 2)+
    ggplot2::geom_path(data = cbso2, ggplot2::aes(x = cbso2[, 'values'], y = cbso2[, 'slopes'], color = cbso2[, 
                                                                                                            "significance"]), size = 2)+
    ggplot2::geom_ribbon(data = cbso1, ggplot2::aes(x = cbso1[, 'values'], ymin = cbso1[, "lower"], ymax = cbso1[,"upper"], fill = cbso1[, "significance"]), 
                         alpha = 0.2) +
    ggplot2::geom_ribbon(data = cbsi, ggplot2::aes(x = cbsi[, 'values'], ymin = cbsi[, "lower"], ymax = cbsi[,"upper"], fill = cbsi[, "significance"]), 
                         alpha = 0.2) +
    ggplot2::geom_ribbon(data = cbso2, ggplot2::aes(x = cbso2[, 'values'], ymin = cbso2[, "lower"], ymax = cbso2[,"upper"], fill = cbso2[, "significance"]), 
                         alpha = 0.2) + 
    ggplot2::geom_hline(ggplot2::aes(yintercept = 0)) + ggplot2::scale_color_manual(name = "Name", 
                                                                  values = c('Значимо' = sig.color, 'Незначимо' = insig.color), 
                                                                  guide = "none") + theme(legend.title = element_blank()) +
    ggplot2::scale_fill_manual(values = c('Значимо' = sig.color, 'Незначимо' = insig.color)) + theme_minimal() +
    ggplot2::geom_segment(ggplot2::aes(x = modrange[1], 
                                         xend = modrange[2], y = 0, yend = 0, linetype = "Диапазон значений\nв выборке"), 
                            lineend = "square", size = 1.25)  +
    ggplot2::labs(x = xlab, y = ylab, fill='', linetype='') + 
    geom_point() +
    annotate("point", x = quantiles[1], y = 0, colour = "blue") +
    annotate("point", x = quantiles[2], y = 0, colour = "blue") +
    annotate("text", x = quantiles[1], y = 0 + rel(0.05), label='Q1') +
    annotate("text", x = quantiles[2], y = 0 + rel(0.05), label='Q3') +
    ggplot2::geom_vline(ggplot2::aes(xintercept = values_change), 
                          linetype = 2, color = sig.color) +
    annotate("text", x = values_change, y = 0 - rel(0.05), label=values_change)
    
    if (!(is.null(ylims[1]))) {
      plot <- plot + ylim(ylims[1], ylims[2])
    }
  
  plot

}
