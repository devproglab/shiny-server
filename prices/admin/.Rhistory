install.packages('downloadthis')
using("data.table", "readxl", "dplyr", "xts", "plotly", "stats",
"lubridate", "ggplot2", "shiny", "flexdashboard", "RColorBrewer", "bslib", "clock",
"downloadthis")
need <- libs[req==FALSE]
if (length(need)>0) {
install.packages(need)
lapply(need,require,character.only=TRUE)
}
# using() install missing libraries and load all the rest --------------------------------------
using <- function(...) {
libs <- unlist(list(...))
req <- unlist(lapply(libs,require,character.only=TRUE))
need <- libs[req==FALSE]
if (length(need)>0) {
install.packages(need)
lapply(need,require,character.only=TRUE)
}
}
using("data.table", "readxl", "dplyr", "xts", "plotly", "stats",
"lubridate", "ggplot2", "shiny", "flexdashboard", "RColorBrewer", "bslib", "clock",
"downloadthis")
#---------------------------------------------------------------------------------------------------
# PREAMBULE
#---------------------------------------------------------------------------------------------------
source('functions.R')
options(encoding = "UTF-8")
theme_set(theme_minimal())
options(scipen=999)
# read cost structre dataset
cost_structure <- read_xlsx('data_inputs/indices/cost_structure.xlsx')
products_structure <- data.frame(id = unique(cost_structure$product))
# read "long"-format datasets
prices_long <- read_excel('data_inputs/prices_long.xlsx')
wages_long <- read_excel('data_inputs/wages_long.xlsx')
agri_prices_long <- read_excel('data_inputs/agri_prices_long.xlsx')
prod_prices_long <- read_excel('data_inputs/prod_prices_long.xlsx')
# get the list of products and industries from datasets
products <- data.frame(id = unique(prices_long$id))
wage_industries <- data.frame(id = unique(wages_long$id))
agri_products <- data.frame(id = unique(agri_prices_long$id))
prod_products <- data.frame(id = unique(prod_prices_long$id))
# prepare independent variables
exrate <- get_fx_moex(fx = "EUR/RUB", start_date = "2015-01-01")
vat <- get_factor('vat')
## Milk products
raw_milk <- get_from_long(from='agri_prices_long', id=agri_products[15,1], name='raw_milk')
wage_milk <- get_from_long(from='wages_long', id=wage_industries[27,1], name='wage_milk')
wage_food <- get_from_long(from='wages_long', id=wage_industries[22,1], name='wage_food')
prod_milk <- get_from_long(from='prod_prices_long', id=prod_products[1,1], name='prod_milk')
prod_mpast <- get_from_long(from='prod_prices_long', id=prod_products[2,1], name='prod_mpast')
prod_mster <- get_from_long(from='prod_prices_long', id=prod_products[3,1], name='prod_mster')
prod_butter <- get_from_long(from='prod_prices_long', id=prod_products[4,1], name='prod_butter')
# prod_cheese_soft <- get_from_long(from='prod_prices_long', id=prod_products[5,1], name='prod_cheese_soft')
prod_cheese_hard <- get_from_long(from='prod_prices_long', id=prod_products[6,1], name='prod_cheese_hard')
# 1. Молоко питьевое пастеризованное ---------------------------------------------------------------
model_name <- products[12,1]
load("C:/Users/ilua/Dropbox/Ilya Gulenkov/Dashboard/data_output/models/Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л.RData")
View(`Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л`)
`Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л`[["decomp"]]
using("data.table", "readxl", "dplyr", "xts", "plotly", "stats", "writexl"
"lubridate", "ggplot2", "shiny", "flexdashboard", "RColorBrewer", "bslib", "clock",
"downloadthis")
using("data.table", "readxl", "dplyr", "xts", "plotly", "stats", "writexl",
"lubridate", "ggplot2", "shiny", "flexdashboard", "RColorBrewer", "bslib", "clock",
"downloadthis")
View(`Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л`)
ncol(data)
View(`Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л`)
ncol(`Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л`$decomp2)
`Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л`[["varlabels"]]
`Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л`[["price_decomp"]]
View(`Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л`)
data <- `Молоко питьевое цельное стерилизованное 2,5-3,2% жирности, л`$price_decomp
names <- colnames(data)
data <- data.frame(data)
data$price <- rowSums(data)
data$date <- as.Date(as.yearmon(rownames(data)))
View(data)
data <- data[,c(ncol(data), (ncol(data)-1), (1:ncol(data)-2))]
ncol(data
ncol(data)
ncol(data)
(ncol(data)-1)
1:ncol(data)-2)
1:ncol(data)-2
data <- data[,c(ncol(data), (ncol(data)-1), 1:(ncol(data)-2))]
